{"version":3,"sources":["../../../src/components/HamburgerIcon/HamburgerIcon.js"],"names":["defaultProps","defaultPropsMap","defaultPropTypes","HamburgerIcon","onClick","onOpenedIconClick","onClosedIconClick","cssConfig","iconToggler","setIconToggler","appliedCssConfig","cssDefaultConfig","isIconOpened","setIsIconOpened","menuIcon","document","querySelector","cssClassMaps","classList","toggle","menuIconToggleHandler","propTypes","PropTypes","func","shape","cssConfigShape","bool"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AAEA;;AAGA;;AAEA;;;;;;;;;;AAJA,IAAQA,YAAR,GAA2CC,wBAA3C,CAAQD,YAAR;AAAA,IAAsBE,gBAAtB,GAA2CD,wBAA3C,CAAsBC,gBAAtB;;AAMA,SAASC,aAAT,OAOG;AAAA,MANDC,OAMC,QANDA,OAMC;AAAA,MALDC,iBAKC,QALDA,iBAKC;AAAA,MAJDC,iBAIC,QAJDA,iBAIC;AAAA,MAHDC,SAGC,QAHDA,SAGC;AAAA,MAFDC,WAEC,QAFDA,WAEC;AAAA,MADDC,cACC,QADDA,cACC;;AACD,MAAMC,gBAAgB,mCAAQC,uBAAR,GAA6BJ,SAA7B,CAAtB;;AACA,kBAAwC,qBAAS,IAAT,CAAxC;AAAA;AAAA,MAAOK,YAAP;AAAA,MAAqBC,eAArB;;AAEA,wBAAU,YAAM;AACd,QAAIL,WAAJ,EAAiB;AACf,UAAMM,QAAQ,GACZC,QAAQ,CAACC,aAAT,YAA2BC,oBAAa,mBAAb,CAA3B,MACAF,QAAQ,CAACC,aAAT,YAA2BC,oBAAa,yBAAb,CAA3B,EAFF;AAGAH,MAAAA,QAAQ,CAACI,SAAT,CAAmBC,MAAnB,CAA0BF,oBAAa,mBAAb,CAA1B;AACAH,MAAAA,QAAQ,CAACI,SAAT,CAAmBC,MAAnB,CAA0BF,oBAAa,yBAAb,CAA1B;AACAR,MAAAA,cAAc,CAAC,KAAD,CAAd;AACD;AACF,GATD,EASG,CAACD,WAAD,EAAcC,cAAd,CATH;;AAWA,MAAMW,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AAClC,QAAMN,QAAQ,GACZC,QAAQ,CAACC,aAAT,YAA2BC,oBAAa,mBAAb,CAA3B,MACAF,QAAQ,CAACC,aAAT,YAA2BC,oBAAa,yBAAb,CAA3B,EAFF;AAGAH,IAAAA,QAAQ,CAACI,SAAT,CAAmBC,MAAnB,CAA0BF,oBAAa,mBAAb,CAA1B;AACAH,IAAAA,QAAQ,CAACI,SAAT,CAAmBC,MAAnB,CAA0BF,oBAAa,yBAAb,CAA1B;;AACA,QAAIL,YAAY,IAAIP,iBAApB,EAAuC;AACrCA,MAAAA,iBAAiB;AAClB;;AACD,QAAI,CAACO,YAAD,IAAiBN,iBAArB,EAAwC;AACtCA,MAAAA,iBAAiB;AAClB;;AACD,QAAI,CAACD,iBAAD,IAAsB,CAACC,iBAAvB,IAA4CF,OAAhD,EAAyD;AACvDA,MAAAA,OAAO;AACR;;AACDS,IAAAA,eAAe,CAAC,CAACD,YAAF,CAAf;AACD,GAhBD;;AAiBA,sBACE,+EACE;AAAK,IAAA,SAAS,EAAE,4BAAGK,oBAAa,wBAAb,CAAH,CAAhB;AAA4D,IAAA,OAAO,EAAEG;AAArE,kBACE;AAAK,IAAA,SAAS,EAAE,4BAAGH,oBAAa,mBAAb,CAAH;AAAhB,IADF,CADF,eAKE,+CAAQ,iBAAIA,mBAAJ,EAAkBP,gBAAlB,CAAR,CALF,CADF;AASD;;AAEDP,aAAa,CAACkB,SAAd,mCACKnB,gBADL;AAEEE,EAAAA,OAAO,EAAEkB,sBAAUC,IAFrB;AAGElB,EAAAA,iBAAiB,EAAEiB,sBAAUC,IAH/B;AAIEjB,EAAAA,iBAAiB,EAAEgB,sBAAUC,IAJ/B;AAKEhB,EAAAA,SAAS,EAAEe,sBAAUE,KAAV,CAAgBC,qBAAhB,CALb;AAMEjB,EAAAA,WAAW,EAAEc,sBAAUI,IANzB;AAOEjB,EAAAA,cAAc,EAAEa,sBAAUC;AAP5B;AAUApB,aAAa,CAACH,YAAd,mCACKA,YADL;AAEEO,EAAAA,SAAS,EAAEI;AAFb;eAKeR,a","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\n\nimport defaultPropsMap from 'Constants/defaultProps';\nconst { defaultProps, defaultPropTypes } = defaultPropsMap;\n\nimport { cssClassMaps, cssConfigShape, cssDefaultConfig } from './utils';\n\nimport { css } from './styles';\n\nfunction HamburgerIcon({\n  onClick,\n  onOpenedIconClick,\n  onClosedIconClick,\n  cssConfig,\n  iconToggler,\n  setIconToggler\n}) {\n  const appliedCssConfig = { ...cssDefaultConfig, ...cssConfig };\n  const [isIconOpened, setIsIconOpened] = useState(true);\n\n  useEffect(() => {\n    if (iconToggler) {\n      const menuIcon =\n        document.querySelector(`.${cssClassMaps['hamburgerMenuIcon']}`) ||\n        document.querySelector(`.${cssClassMaps['hamburgerMenuClosedIcon']}`);\n      menuIcon.classList.toggle(cssClassMaps['hamburgerMenuIcon']);\n      menuIcon.classList.toggle(cssClassMaps['hamburgerMenuClosedIcon']);\n      setIconToggler(false);\n    }\n  }, [iconToggler, setIconToggler]);\n\n  const menuIconToggleHandler = () => {\n    const menuIcon =\n      document.querySelector(`.${cssClassMaps['hamburgerMenuIcon']}`) ||\n      document.querySelector(`.${cssClassMaps['hamburgerMenuClosedIcon']}`);\n    menuIcon.classList.toggle(cssClassMaps['hamburgerMenuIcon']);\n    menuIcon.classList.toggle(cssClassMaps['hamburgerMenuClosedIcon']);\n    if (isIconOpened && onOpenedIconClick) {\n      onOpenedIconClick();\n    }\n    if (!isIconOpened && onClosedIconClick) {\n      onClosedIconClick();\n    }\n    if (!onOpenedIconClick && !onClosedIconClick && onClick) {\n      onClick();\n    }\n    setIsIconOpened(!isIconOpened);\n  };\n  return (\n    <>\n      <div className={cx(cssClassMaps['hamburgerMenuContainer'])} onClick={menuIconToggleHandler}>\n        <div className={cx(cssClassMaps['hamburgerMenuIcon'])}></div>\n      </div>\n\n      <style>{css(cssClassMaps, appliedCssConfig)}</style>\n    </>\n  );\n}\n\nHamburgerIcon.propTypes = {\n  ...defaultPropTypes,\n  onClick: PropTypes.func,\n  onOpenedIconClick: PropTypes.func,\n  onClosedIconClick: PropTypes.func,\n  cssConfig: PropTypes.shape(cssConfigShape),\n  iconToggler: PropTypes.bool,\n  setIconToggler: PropTypes.func\n};\n\nHamburgerIcon.defaultProps = {\n  ...defaultProps,\n  cssConfig: cssDefaultConfig\n};\n\nexport default HamburgerIcon;\n"],"file":"HamburgerIcon.js"}