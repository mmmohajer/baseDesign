"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.css = void 0;

var css = function css(cssConfig) {
  var containerWidth = Math.max(cssConfig['hamburgerMenuTopWidth'], cssConfig['hamburgerMenuMiddleWidth'], cssConfig['hamburgerMenuBottomWidth'], cssConfig['hamburgerMenuClosedIconWidth']) + cssConfig['hamburgerMenuContainerXPadding'];
  var containerHeight = cssConfig['hamburgerMenuHeight'] * 3 + cssConfig['hamburgerMenuSpace'] * 2 + 10;
  var toBeExtended = "\n        height: ".concat(cssConfig['hamburgerMenuHeight'], "px;\n        background-color: ").concat(cssConfig['hamburgerMenuBgColor'], ";\n        display: block;\n        border-radius: ").concat(cssConfig['hamburgerMenuBorderRadius'], "px;\n        transition: all ease-in ").concat(cssConfig['hamburgerMenuTransitionDuration'], "s;\n    ");
  return "\n    .".concat('ISWAD-Hamburger-hamburgerMenuContainer', " {\n        display: flex;\n        width: ", containerWidth, "px;\n        justify-content: center;\n        align-items: center;\n        height: ").concat(containerHeight, "px;\n        cursor: pointer;\n        background-color: ").concat(cssConfig['hamburgerMenuContainerBgColor'], ";\n        border: ").concat(cssConfig['hamburgerMenuContainerBorder'], ";\n        border-radius: ").concat(cssConfig['hamburgerMenuContainerBorderRadius'], "px;\n    }\n\n    .", 'ISWAD-Hamburger-hamburgerMenuIcon', " {\n        ").concat(toBeExtended, "\n        position: relative;\n        width: ").concat(cssConfig['hamburgerMenuMiddleWidth'], "px;\n        transform: ").concat(cssConfig['hamburgerMenuTransform'], ";\n      }\n      \n      .", 'ISWAD-Hamburger-hamburgerMenuIcon', "::before {\n        content: \"\";\n        ").concat(toBeExtended, "\n        position: absolute;\n        top: 0;\n        left: 0;\n        transform: translateY(-").concat(cssConfig['hamburgerMenuSpace'], "px);\n        width: ").concat(cssConfig['hamburgerMenuTopWidth'], "px;\n      }\n      \n      .", 'ISWAD-Hamburger-hamburgerMenuIcon', "::after {\n        content: \"\";\n        ").concat(toBeExtended, "\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        transform: translateY(").concat(cssConfig['hamburgerMenuSpace'], "px);\n        width: ").concat(cssConfig['hamburgerMenuBottomWidth'], "px;\n      }\n      \n      .", 'ISWAD-Hamburger-hamburgerMenuClosedIcon', " {\n        ").concat(toBeExtended, "\n        position: relative;\n        transform: scaleX(1);\n        opacity: 1;\n        background-color: transparent;\n        width: ").concat(cssConfig['hamburgerMenuClosedIconWidth'], "px;\n      }\n      \n      .", 'ISWAD-Hamburger-hamburgerMenuClosedIcon', "::before {\n        content: \"\";\n        ").concat(toBeExtended, "\n        position: absolute;\n        transform: rotate(-45deg) scaleX(1.25);\n        opacity: 1;\n        width: ").concat(cssConfig['hamburgerMenuClosedIconWidth'], "px;\n      }\n      \n      .", 'ISWAD-Hamburger-hamburgerMenuClosedIcon', "::after {\n        content: \"\";\n        ").concat(toBeExtended, "\n        position: absolute;\n        transform: rotate(45deg) scaleX(1.25);\n        opacity: 1;\n        width: ").concat(cssConfig['hamburgerMenuClosedIconWidth'], "px;\n      }     \n    ");
};

exports.css = css;
//# sourceMappingURL=styles.js.map