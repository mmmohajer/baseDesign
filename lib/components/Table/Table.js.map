{"version":3,"sources":["../../../src/components/Table/Table.js"],"names":["defaultProps","defaultPropsMap","defaultPropTypes","Table","headLines","data","colWidth","tableWidth","isSelectable","search","selectedData","setSelectedData","sortIconColors","rowsPerPage","currentPage","setCurrentPage","showDefaultPagination","numberOfShownPages","props","first_name","last_name","filter","setFilter","filteredData","setFilteredData","sortedData","setSortedData","isChecked","setIsChecked","allIsChecked","setAllIsChecked","isSorted","setIsSorted","sortIconColor","setSortIconColor","pageData","setPageData","numberOfTotalPages","setNumberOfTotalPages","tableTotalWidth","setTableTotalWidth","calcTotalWidth","totalWidth","allCols","length","map","h","width","searchHandler","e","head","key","value","curFilter","target","setTimeout","localSortedData","d","curSearchElem","includes","localIsChecked","count","localData","localSortIconColor","isSortable","localSelectedData","Object","keys","idx","toBeAdded","find","parseInt","push","sortHandler","localIsSorted","curKey","k","sort","a","b","firstVal","secondVal","Math","ceil","localPageData","firstIdx","lastIdx","slice","checked","obj","display","hasSearch","onChange","curRow","curCol","idx1","propTypes","PropTypes","array","arrayOf","object","number","string","bool","func","shape","ASC","DESC","REG"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport cx from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nimport defaultPropsMap from \"Constants/defaultProps\";\nconst { defaultProps, defaultPropTypes } = defaultPropsMap;\n\nimport Th from \"./subs/Th\";\nimport Tr from \"./subs/tr\";\nimport Td from \"./subs/Td\";\nimport Icon from \"../Icon\";\nimport Search from \"../Search\";\nimport Pagination from \"../Pagination\";\nimport propTypes from \"prop-types\";\n\nconst Table = ({\n  headLines,\n  data,\n  colWidth,\n  tableWidth,\n  isSelectable,\n  search,\n  selectedData,\n  setSelectedData,\n  sortIconColors,\n  rowsPerPage,\n  currentPage,\n  setCurrentPage,\n  showDefaultPagination,\n  numberOfShownPages,\n  ...props\n}) => {\n  const [filter, setFilter] = useState({ first_name: \"\", last_name: \"\" });\n  const [filteredData, setFilteredData] = useState([]);\n  const [sortedData, setSortedData] = useState([]);\n  const [isChecked, setIsChecked] = useState({});\n  const [allIsChecked, setAllIsChecked] = useState(false);\n  const [isSorted, setIsSorted] = useState({});\n  const [sortIconColor, setSortIconColor] = useState({});\n  const [pageData, setPageData] = useState({});\n  const [numberOfTotalPages, setNumberOfTotalPages] = useState(1);\n  const [tableTotalWidth, setTableTotalWidth] = useState(\"100%\");\n\n  const calcTotalWidth = () => {\n    let totalWidth = 0;\n    let allCols = headLines.length;\n    headLines.map((h) => {\n      if (h?.width) {\n        totalWidth += h.width;\n        allCols -= 1;\n      }\n    });\n    totalWidth += colWidth * allCols;\n    if (isSelectable) {\n      totalWidth += 25;\n    }\n    setTableTotalWidth(`${totalWidth}px`);\n  };\n\n  useEffect(() => {\n    if (!tableWidth) {\n      calcTotalWidth();\n    } else {\n      setTableTotalWidth(tableWidth);\n    }\n  }, []);\n\n  const searchHandler = (e, head) => {\n    const key = head?.value || head;\n    const curFilter = { ...filter };\n    curFilter[key] = e.target.value;\n    setFilter(curFilter);\n\n    setTimeout(() => {\n      if (currentPage !== 1) {\n        setCurrentPage(1);\n      }\n      let localSortedData = [...data];\n      localSortedData = localSortedData.filter((d) => {\n        const curSearchElem = d[key]?.value || d[key];\n        return curSearchElem.includes(e.target.value);\n      });\n      setSortedData(localSortedData);\n      setFilteredData(localSortedData);\n    }, 500);\n  };\n\n  useEffect(() => {\n    const localIsChecked = { ...isChecked };\n    let count = 0;\n    if (data.length) {\n      const localData = [...data];\n      localData.map((d) => {\n        d[\"iswad_table_idx\"] = count;\n        localIsChecked[count] = false;\n        count += 1;\n      });\n      setFilteredData(localData);\n      setSortedData(localData);\n      setIsChecked(localIsChecked);\n    }\n  }, [data]);\n\n  useEffect(() => {\n    const localSortIconColor = { ...sortIconColor };\n    headLines.map((h) => {\n      if (h?.isSortable) {\n        localSortIconColor[h?.value || h] = sortIconColors[\"REG\"] || \"silver\";\n      }\n    });\n    setSortIconColor(localSortIconColor);\n  }, [headLines]);\n\n  useEffect(() => {\n    const localSelectedData = [];\n    if (Object.keys(isChecked).length) {\n      Object.keys(isChecked).map((idx) => {\n        if (isChecked[idx]) {\n          const toBeAdded = {\n            ...sortedData.find((d) => d[\"iswad_table_idx\"] === parseInt(idx)),\n          };\n          delete toBeAdded[\"iswad_table_idx\"];\n          localSelectedData.push(toBeAdded);\n        }\n      });\n      setSelectedData(localSelectedData);\n    }\n  }, [isChecked]);\n\n  const sortHandler = (head) => {\n    setCurrentPage(1);\n    const key = head?.value || head;\n    let localIsSorted = { ...isSorted };\n    const curKey = Object.keys(localIsSorted)[0] || false;\n    if (curKey && key === curKey) {\n      localIsSorted[key] += 1;\n      if (localIsSorted[key] > 2) {\n        localIsSorted[key] = 0;\n      }\n    } else {\n      localIsSorted = {};\n      localIsSorted[key] = 1;\n    }\n    setIsSorted(localIsSorted);\n\n    const localSortIconColor = { ...sortIconColor };\n    Object.keys(localSortIconColor).map((k) => {\n      localSortIconColor[k] = sortIconColors[\"REG\"] || \"silver\";\n    });\n    if (localIsSorted[key] === 1) {\n      localSortIconColor[key] = sortIconColors[\"ASC\"] || \"green\";\n    } else if (localIsSorted[key] === 2) {\n      localSortIconColor[key] = sortIconColors[\"DESC\"] || \"red\";\n    } else {\n      localSortIconColor[key] = sortIconColors[\"REG\"] || \"silver\";\n    }\n    setSortIconColor(localSortIconColor);\n  };\n\n  useEffect(() => {\n    const curKey = Object.keys(isSorted)[0] || false;\n    const localData = [...sortedData];\n    if (curKey) {\n      if (isSorted[curKey] === 1) {\n        localData.sort((a, b) => {\n          const firstVal = a[curKey]?.value || a[curKey];\n          const secondVal = b[curKey]?.value || b[curKey];\n          return firstVal > secondVal ? 1 : secondVal > firstVal ? -1 : 0;\n        });\n        setSortedData(localData);\n      } else if (isSorted[curKey] === 2) {\n        localData.sort((a, b) => {\n          const firstVal = a[curKey]?.value || a[curKey];\n          const secondVal = b[curKey]?.value || b[curKey];\n          return firstVal > secondVal ? -1 : secondVal > firstVal ? 1 : 0;\n        });\n        setSortedData(localData);\n      } else {\n        setSortedData([...filteredData]);\n      }\n    }\n  }, [isSorted]);\n\n  useEffect(() => {\n    setNumberOfTotalPages(Math.ceil(sortedData.length / rowsPerPage));\n  }, [sortedData]);\n\n  useEffect(() => {\n    let localPageData = [...sortedData];\n    if (rowsPerPage) {\n      const firstIdx = (currentPage - 1) * rowsPerPage;\n      const lastIdx = currentPage * rowsPerPage - 1;\n      localPageData = localPageData.slice(firstIdx, lastIdx);\n    }\n    setPageData(localPageData);\n  }, [currentPage, sortedData, filteredData]);\n\n  return (\n    <>\n      <div>\n        <div className={cx(\"w-per-100 of-x-auto\")}>\n          <div\n            className={cx(\n              \"flex flex--dir--col ml-auto mr-auto of-x-auto iswad_table\"\n            )}\n            {...props}\n          >\n            <Th className=\"\">\n              {isSelectable && (\n                <Td style={{ width: `25px` }}>\n                  <input\n                    type=\"checkbox\"\n                    checked={allIsChecked}\n                    onChange={(e) => {\n                      setAllIsChecked(e.target.checked);\n                      const localIsChecked = { ...isChecked };\n                      Object.keys(localIsChecked).map((obj) => {\n                        localIsChecked[obj] = e.target.checked;\n                      });\n                      setIsChecked(localIsChecked);\n                    }}\n                  />\n                </Td>\n              )}\n              {headLines.map((head, idx) => (\n                <Td\n                  className=\"\"\n                  style={head?.width && { width: `${head.width}px` }}\n                  key={idx}\n                >\n                  <div className=\"flex w-per-100 flex--jc--between flex--ai--center\">\n                    <div className=\"w-per-100 iswad_table_headContainer\">\n                      <div className=\"m1\">{head?.display || head}</div>\n                      {head.hasSearch && (\n                        <div className=\"\">\n                          {search ? (\n                            search({\n                              value: filter[head?.value || head],\n                              onChange: (e) => searchHandler(e, head),\n                            })\n                          ) : (\n                            <Search\n                              type=\"search\"\n                              value={filter[head?.value || head]}\n                              onChange={(e) => searchHandler(e, head)}\n                              className=\"iswad_table_search\"\n                            />\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    {head?.isSortable && (\n                      <div\n                        className=\"mouse-hand\"\n                        onClick={() => sortHandler(head)}\n                      >\n                        <Icon\n                          type=\"down\"\n                          fill={sortIconColor[head?.value || head]}\n                          stroke={sortIconColor[head?.value || head]}\n                        />\n                      </div>\n                    )}\n                  </div>\n                </Td>\n              ))}\n            </Th>\n            {pageData?.length\n              ? pageData.map((curRow, idx) => (\n                  <Tr key={idx}>\n                    {isSelectable && (\n                      <Td style={{ width: `25px` }}>\n                        <div>\n                          <input\n                            type=\"checkbox\"\n                            checked={isChecked[curRow[\"iswad_table_idx\"]]}\n                            onChange={(e) => {\n                              const localIsChecked = { ...isChecked };\n                              localIsChecked[curRow[\"iswad_table_idx\"]] =\n                                e.target.checked;\n                              setIsChecked(localIsChecked);\n                            }}\n                          />\n                        </div>\n                      </Td>\n                    )}\n                    {headLines.map((curCol, idx1) => (\n                      <Td\n                        key={idx1}\n                        style={curCol?.width && { width: `${curCol.width}px` }}\n                      >\n                        {curRow[curCol?.value || curCol]?.display ||\n                          curRow[curCol?.value || curCol] ||\n                          curRow[curCol]}\n                      </Td>\n                    ))}\n                  </Tr>\n                ))\n              : \"\"}\n          </div>\n        </div>\n        {showDefaultPagination && numberOfTotalPages ? (\n          <Pagination\n            numberOfShownPages={numberOfShownPages || 5}\n            currentPage={currentPage}\n            numberOfTotalPages={numberOfTotalPages}\n            setCurrentPage={setCurrentPage}\n            showFirstLastIcon={true}\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n      <style>\n        {`\n        .iswad_td {\n            width: ${colWidth}px;\n          }\n\n          .iswad_table {\n            width: ${tableTotalWidth};\n          }\n          `}\n      </style>\n    </>\n  );\n};\n\nTable.propTypes = {\n  ...defaultPropTypes,\n  headLines: PropTypes.array,\n  data: PropTypes.arrayOf(propTypes.object),\n  colWidth: PropTypes.number,\n  tableWidth: PropTypes.string,\n  isSelectable: PropTypes.bool,\n  search: PropTypes.func,\n  selectedData: PropTypes.arrayOf(propTypes.object),\n  setSelectedData: PropTypes.func,\n  sortIconColors: PropTypes.shape({\n    ASC: PropTypes.string,\n    DESC: PropTypes.string,\n    REG: PropTypes.string,\n  }),\n  rowsPerPage: PropTypes.number,\n  currentPage: PropTypes.number,\n  setCurrentPage: PropTypes.func,\n  showDefaultPagination: PropTypes.bool,\n  numberOfShownPages: PropTypes.number,\n};\n\nTable.defaultProps = {\n  colWidth: 300,\n  isSelectable: false,\n  sortIconColors: { ASC: \"green\", DESC: \"red\", REG: \"silver\" },\n  showDefaultPagination: true,\n  numberOfShownPages: 5,\n};\n\nexport default Table;\n"],"file":"Table.js"}