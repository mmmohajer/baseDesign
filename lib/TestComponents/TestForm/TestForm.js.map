{"version":3,"file":"TestForm.js","names":["TestForm","useState","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","repeatedPassword","setRepeatedPassword","fistNameErrorMessage","setFirstNameErrorMessage","fistNameErrorIsActive","setFirstNameErrorIsActive","lastNameErrorMessage","setLastNameErrorMessage","lastNameErrorIsActive","setLastNameErrorIsActive","emailErrorMessage","setEmailErrorMessage","emailErrorIsActive","setEmailErrorIsActive","passwordErrorMessage","setPasswordErrorMessage","passwordErrorIsActive","setPasswordErrorIsActive","repeatedPasswordErrorMessage","setRepeatedPasswordErrorMessage","repeatedPasswordErrorIsActive","setRepeatedPasswordErrorIsActive","toBeValidatedFields","input_name","validators","firstNameValidators","errorMessageHandler","errorActivateHandler","lastNameValidators","emailValidators","passwordValidators","repeatedPasswordValidators","console","log","e","target","value"],"sources":["../../../src/TestComponents/TestForm/TestForm.js"],"sourcesContent":["import React, { useState } from 'react';\n\nimport './TestForm.scss';\n\nimport Form from 'Components/Form';\nimport Input from 'Components/Input';\nimport Label from 'Components/Label';\n\nimport {\n  firstNameValidators,\n  lastNameValidators,\n  emailValidators,\n  passwordValidators,\n  repeatedPasswordValidators\n} from './utils';\n\nconst TestForm = () => {\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatedPassword, setRepeatedPassword] = useState('');\n\n  const [fistNameErrorMessage, setFirstNameErrorMessage] = useState('');\n  const [fistNameErrorIsActive, setFirstNameErrorIsActive] = useState(false);\n\n  const [lastNameErrorMessage, setLastNameErrorMessage] = useState('');\n  const [lastNameErrorIsActive, setLastNameErrorIsActive] = useState(false);\n\n  const [emailErrorMessage, setEmailErrorMessage] = useState('');\n  const [emailErrorIsActive, setEmailErrorIsActive] = useState(false);\n\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState('');\n  const [passwordErrorIsActive, setPasswordErrorIsActive] = useState(false);\n\n  const [repeatedPasswordErrorMessage, setRepeatedPasswordErrorMessage] = useState('');\n  const [repeatedPasswordErrorIsActive, setRepeatedPasswordErrorIsActive] = useState(false);\n\n  const toBeValidatedFields = [\n    {\n      input_name: 'first_name',\n      validators: firstNameValidators,\n      errorMessageHandler: setFirstNameErrorMessage,\n      errorActivateHandler: setFirstNameErrorIsActive\n    },\n    {\n      input_name: 'last_name',\n      validators: lastNameValidators,\n      errorMessageHandler: setLastNameErrorMessage,\n      errorActivateHandler: setLastNameErrorIsActive\n    },\n    {\n      input_name: 'email',\n      validators: emailValidators,\n      errorMessageHandler: setEmailErrorMessage,\n      errorActivateHandler: setEmailErrorIsActive\n    },\n    {\n      input_name: 'password',\n      validators: passwordValidators,\n      errorMessageHandler: setPasswordErrorMessage,\n      errorActivateHandler: setPasswordErrorIsActive\n    },\n    {\n      input_name: 'repeatedPassword',\n      validators: repeatedPasswordValidators(password),\n      errorMessageHandler: setRepeatedPasswordErrorMessage,\n      errorActivateHandler: setRepeatedPasswordErrorIsActive\n    }\n  ];\n\n  return (\n    <>\n      <Form\n        className=\"textWhite py1\"\n        toBeValidatedFields={toBeValidatedFields}\n        onSubmit={() => console.log('Yay')}>\n        <Label className=\"textBlack\" htmlFor=\"sample\">\n          First Name\n        </Label>\n        <Input\n          type=\"text\"\n          name=\"first_name\"\n          fullWidth\n          placeholder=\"Type your first name\"\n          value={firstName}\n          onChange={(e) => {\n            setFirstName(e.target.value);\n            setFirstNameErrorIsActive(false);\n            setFirstNameErrorMessage('');\n          }}\n          errorMessage={fistNameErrorMessage}\n          errorIsActive={fistNameErrorIsActive}\n        />\n        <Input\n          type=\"text\"\n          name=\"last_name\"\n          placeholder=\"Type your last name\"\n          value={lastName}\n          onChange={(e) => {\n            setLastName(e.target.value);\n            setLastNameErrorIsActive(false);\n            setLastNameErrorMessage('');\n          }}\n          errorMessage={lastNameErrorMessage}\n          errorIsActive={lastNameErrorIsActive}\n        />\n        <Input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Type your email\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n            setEmailErrorIsActive(false);\n            setEmailErrorMessage('');\n          }}\n          errorMessage={emailErrorMessage}\n          errorIsActive={emailErrorIsActive}\n        />\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Type your password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n            setPasswordErrorIsActive(false);\n            setPasswordErrorMessage('');\n          }}\n          errorMessage={passwordErrorMessage}\n          errorIsActive={passwordErrorIsActive}\n        />\n        <Input\n          type=\"password\"\n          name=\"repeatedPassword\"\n          placeholder=\"Repeat your password\"\n          value={repeatedPassword}\n          onChange={(e) => {\n            setRepeatedPassword(e.target.value);\n            setRepeatedPasswordErrorIsActive(false);\n            setRepeatedPasswordErrorMessage('');\n          }}\n          errorMessage={repeatedPasswordErrorMessage}\n          errorIsActive={repeatedPasswordErrorIsActive}\n        />\n        <Input type=\"checkbox\" name=\"sample3\" />\n        <Input type=\"radio\" name=\"sample4\" />\n        <Input type=\"submit\" value=\"Submit\" />\n      </Form>\n    </>\n  );\n};\n\nexport default TestForm;\n"],"mappings":"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"}