{"version":3,"sources":["../../../src/TestComponents/TestNavBar/TestNavBar.js"],"names":["MENUES","SUB_MENUES","Services","HamIconCssConfig","hamburgerMenuContainerBgColor","hamburgerMenuContainerBorder","hamburgerMenuContainerBorderRadius","hamburgerMenuTopWidth","hamburgerMenuMiddleWidth","hamburgerMenuBottomWidth","hamburgerMenuHeight","hamburgerMenuBgColor","hamburgerMenuSpace","hamburgerMenuBorderRadius","hamburgerMenuClosedIconWidth","hamburgerMenuTransitionDuration","hamburgerMenuContainerXPadding","hamburgerMenuTransform","TestNavBar","activeSubMenues","setActiveSubMenues","activeMenu","setActiveMenu","mobMenuIsActive","setMobMenuIsActive","iconToggler","setIconToggler","addActiveSubMenu","menu","removeActiveSubMenu","localActiveSubMenues","filter","m","menuClickHandler","Object","keys","includes","mobMenuClickHandler"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\n\nimport './DesktopNav';\nimport DesktopNav from './DesktopNav';\nimport MobileNav from './MobileNav';\nimport HamburgerIcon from 'Components/HamburgerIcon';\nimport './TestNavBar.scss';\n\nimport styles from './TestNavBar.module.scss';\n\nconst MENUES = ['Home', 'About Us', 'Services', 'Contact Us'];\nconst SUB_MENUES = {\n  'About Us': ['Team', 'Support', 'Careers'],\n  Services: ['Software Development', 'App Development', 'MVP Development', 'Web Design']\n};\n\nconst HamIconCssConfig = {\n  hamburgerMenuContainerBgColor: 'transparent',\n  hamburgerMenuContainerBorder: 'none',\n  hamburgerMenuContainerBorderRadius: 10,\n  hamburgerMenuTopWidth: 15,\n  hamburgerMenuMiddleWidth: 25,\n  hamburgerMenuBottomWidth: 35,\n  hamburgerMenuHeight: 4,\n  hamburgerMenuBgColor: 'white',\n  hamburgerMenuSpace: 10,\n  hamburgerMenuBorderRadius: 5,\n  hamburgerMenuClosedIconWidth: 25,\n  hamburgerMenuTransitionDuration: 0.3,\n  hamburgerMenuContainerXPadding: 0,\n  hamburgerMenuTransform: 'scale(-1, 1)'\n};\n\nconst TestNavBar = () => {\n  const [activeSubMenues, setActiveSubMenues] = useState([]);\n  const [activeMenu, setActiveMenu] = useState('Home');\n  const [mobMenuIsActive, setMobMenuIsActive] = useState(false);\n  const [iconToggler, setIconToggler] = useState(false);\n\n  const addActiveSubMenu = (menu) => {\n    setActiveSubMenues([menu]);\n  };\n\n  const removeActiveSubMenu = (menu) => {\n    let localActiveSubMenues = [...activeSubMenues];\n    localActiveSubMenues = localActiveSubMenues.filter((m) => m !== menu);\n    setActiveSubMenues(localActiveSubMenues);\n  };\n\n  const menuClickHandler = (menu) => {\n    setActiveSubMenues([]);\n    if (Object.keys(SUB_MENUES).includes(menu)) {\n      if (activeSubMenues.includes(menu)) {\n        removeActiveSubMenu(menu);\n      } else {\n        addActiveSubMenu(menu);\n      }\n    } else {\n      setActiveMenu(menu);\n      setActiveSubMenues([]);\n    }\n  };\n\n  const mobMenuClickHandler = (menu) => {\n    menuClickHandler(menu);\n    if (!Object.keys(SUB_MENUES).includes(menu)) {\n      setIconToggler(true);\n      setMobMenuIsActive(false);\n    }\n  };\n\n  return (\n    <>\n      <div className=\"show-flex-in-lg\">\n        <DesktopNav\n          activeMenu={activeMenu}\n          setActiveMenu={setActiveMenu}\n          activeSubMenues={activeSubMenues}\n          menuClickHandler={menuClickHandler}\n          MENUES={MENUES}\n          SUB_MENUES={SUB_MENUES}\n        />\n      </div>\n      <div\n        className={cx(\n          'show-flex-in-md-sm-xsm',\n          'w-per-100 flex flex--jc--between flex--ai--center pl2 pr2 height-px-60 br-bottom-solid-1 br-color-inverse bgInverse pos-rel'\n        )}>\n        <div className=\"w-px-200 height-px-50 bgSilver flex flex--jc--center flex--ai--center\">\n          Logo 200x50\n        </div>\n        <div className=\"z-100000\">\n          <HamburgerIcon\n            cssConfig={HamIconCssConfig}\n            onClick={() => setMobMenuIsActive(!mobMenuIsActive)}\n            iconToggler={iconToggler}\n            setIconToggler={setIconToggler}\n          />\n        </div>\n        <div\n          className={cx(\n            'height-vh-full w-per-80 pos-fix pos-fix--rt flex flex--dir--col z-10000 iswad_mobNav',\n            mobMenuIsActive && 'iswad_mobNav_active'\n          )}>\n          <div className=\"height-px-60\"></div>\n          <MobileNav\n            activeMenu={activeMenu}\n            setActiveMenu={setActiveMenu}\n            activeSubMenues={activeSubMenues}\n            mobMenuClickHandler={mobMenuClickHandler}\n            MENUES={MENUES}\n            SUB_MENUES={SUB_MENUES}\n            mobMenuIsActive={mobMenuIsActive}\n            setMobMenuIsActive={setMobMenuIsActive}\n            iconToggler={iconToggler}\n            setIconToggler={setIconToggler}\n          />\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default TestNavBar;\n"],"file":"TestNavBar.js"}