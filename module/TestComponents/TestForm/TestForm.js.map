{"version":3,"sources":["../../../src/TestComponents/TestForm/TestForm.js"],"names":["TestForm","firstName","setFirstName","lastName","setLastName","email","setEmail","password","setPassword","repeatedPassword","setRepeatedPassword","fistNameErrorMessage","setFirstNameErrorMessage","fistNameErrorIsActive","setFirstNameErrorIsActive","lastNameErrorMessage","setLastNameErrorMessage","lastNameErrorIsActive","setLastNameErrorIsActive","emailErrorMessage","setEmailErrorMessage","emailErrorIsActive","setEmailErrorIsActive","passwordErrorMessage","setPasswordErrorMessage","passwordErrorIsActive","setPasswordErrorIsActive","repeatedPasswordErrorMessage","setRepeatedPasswordErrorMessage","repeatedPasswordErrorIsActive","setRepeatedPasswordErrorIsActive","toBeValidatedFields","input_name","validators","firstNameValidators","errorMessageHandler","errorActivateHandler","lastNameValidators","emailValidators","passwordValidators","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\n\nimport \"./TestForm.scss\";\n\nimport Form from \"Components/Form\";\nimport Input from \"Components/Input\";\nimport Label from \"Components/Label\";\n\nimport {\n  firstNameValidators,\n  lastNameValidators,\n  emailValidators,\n  passwordValidators,\n  repeatedPasswordValidators,\n} from \"./utils\";\n\nconst TestForm = () => {\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [repeatedPassword, setRepeatedPassword] = useState(\"\");\n\n  const [fistNameErrorMessage, setFirstNameErrorMessage] = useState(\"\");\n  const [fistNameErrorIsActive, setFirstNameErrorIsActive] = useState(false);\n\n  const [lastNameErrorMessage, setLastNameErrorMessage] = useState(\"\");\n  const [lastNameErrorIsActive, setLastNameErrorIsActive] = useState(false);\n\n  const [emailErrorMessage, setEmailErrorMessage] = useState(\"\");\n  const [emailErrorIsActive, setEmailErrorIsActive] = useState(false);\n\n  const [passwordErrorMessage, setPasswordErrorMessage] = useState(\"\");\n  const [passwordErrorIsActive, setPasswordErrorIsActive] = useState(false);\n\n  const [repeatedPasswordErrorMessage, setRepeatedPasswordErrorMessage] =\n    useState(\"\");\n  const [repeatedPasswordErrorIsActive, setRepeatedPasswordErrorIsActive] =\n    useState(false);\n\n  const toBeValidatedFields = [\n    {\n      input_name: \"first_name\",\n      validators: firstNameValidators,\n      errorMessageHandler: setFirstNameErrorMessage,\n      errorActivateHandler: setFirstNameErrorIsActive,\n    },\n    {\n      input_name: \"last_name\",\n      validators: lastNameValidators,\n      errorMessageHandler: setLastNameErrorMessage,\n      errorActivateHandler: setLastNameErrorIsActive,\n    },\n    {\n      input_name: \"email\",\n      validators: emailValidators,\n      errorMessageHandler: setEmailErrorMessage,\n      errorActivateHandler: setEmailErrorIsActive,\n    },\n    {\n      input_name: \"password\",\n      validators: passwordValidators,\n      errorMessageHandler: setPasswordErrorMessage,\n      errorActivateHandler: setPasswordErrorIsActive,\n    },\n    {\n      input_name: \"repeatedPassword\",\n      validators: repeatedPasswordValidators(password),\n      errorMessageHandler: setRepeatedPasswordErrorMessage,\n      errorActivateHandler: setRepeatedPasswordErrorIsActive,\n    },\n  ];\n\n  return (\n    <>\n      <Form\n        className=\"textWhite py1\"\n        toBeValidatedFields={toBeValidatedFields}\n        onSubmit={() => console.log(\"Yay\")}\n      >\n        <Label className=\"textBlack\" htmlFor=\"sample\">\n          First Name\n        </Label>\n        <Input\n          type=\"text\"\n          name=\"first_name\"\n          fullWidth\n          placeholder=\"Type your first name\"\n          value={firstName}\n          onChange={(e) => {\n            setFirstName(e.target.value);\n            setFirstNameErrorIsActive(false);\n            setFirstNameErrorMessage(\"\");\n          }}\n          errorMessage={fistNameErrorMessage}\n          errorIsActive={fistNameErrorIsActive}\n        />\n        <Input\n          type=\"text\"\n          name=\"last_name\"\n          placeholder=\"Type your last name\"\n          value={lastName}\n          onChange={(e) => {\n            setLastName(e.target.value);\n            setLastNameErrorIsActive(false);\n            setLastNameErrorMessage(\"\");\n          }}\n          errorMessage={lastNameErrorMessage}\n          errorIsActive={lastNameErrorIsActive}\n        />\n        <Input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Type your email\"\n          value={email}\n          onChange={(e) => {\n            setEmail(e.target.value);\n            setEmailErrorIsActive(false);\n            setEmailErrorMessage(\"\");\n          }}\n          errorMessage={emailErrorMessage}\n          errorIsActive={emailErrorIsActive}\n        />\n        <Input\n          type=\"password\"\n          name=\"password\"\n          placeholder=\"Type your password\"\n          value={password}\n          onChange={(e) => {\n            setPassword(e.target.value);\n            setPasswordErrorIsActive(false);\n            setPasswordErrorMessage(\"\");\n          }}\n          errorMessage={passwordErrorMessage}\n          errorIsActive={passwordErrorIsActive}\n        />\n        <Input\n          type=\"password\"\n          name=\"repeatedPassword\"\n          placeholder=\"Repeat your password\"\n          value={repeatedPassword}\n          onChange={(e) => {\n            setRepeatedPassword(e.target.value);\n            setRepeatedPasswordErrorIsActive(false);\n            setRepeatedPasswordErrorMessage(\"\");\n          }}\n          errorMessage={repeatedPasswordErrorMessage}\n          errorIsActive={repeatedPasswordErrorIsActive}\n        />\n        <Input type=\"checkbox\" name=\"sample3\" />\n        <Input type=\"radio\" name=\"sample4\" />\n        <Input type=\"submit\" value=\"Submit\" />\n      </Form>\n    </>\n  );\n};\n\nexport default TestForm;\n"],"file":"TestForm.js"}